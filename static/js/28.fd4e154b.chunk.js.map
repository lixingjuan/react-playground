{"version":3,"sources":["pages/TestExportPdf/components/CodeEditor.tsx","pages/TestExportPdf/components/constant.ts","pages/TestExportPdf/components/Preview.tsx","pages/TestExportPdf/components/CodeHeader.tsx","pages/TestExportPdf/components/PreviewHeader.tsx","pages/TestExportPdf/index.tsx"],"names":["CodeMirrorStyle","styled","CodeMirror","options","lineNumbers","CodeEditor","setPdf","useState","code","setCode","useDebounceEffect","pdf","JsPDF","window","autoTable","Function","demo","message","console","error","wait","value","onChange","DemoStyle","div","Demo","iframeSrc","setIframeSrc","useEffect","log","output","src","title","Option","Select","header","props","htmlFor","bordered","defaultValue","style","color","fontSize","marginLeft","borderBottom","href","className","IndexStyle","initPdf","ExportPdfDemo","CodeHeader","PreviewHeader","Preview"],"mappings":"+OAUMA,EAAkBC,YAAOC,IAAPD,CAAH,kEAKjBE,EAAU,CACZC,aAAa,GAqCAC,EA9ByB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OACzC,EAAwBC,mBCxBL,mhEDwBnB,mBAAOC,EAAP,KAAaC,EAAb,KA0BA,OAxBAC,aACE,WACE,IACE,IAAMC,EAAM,IAAIC,QAEhBC,OAAOF,IAAMA,EAEbE,OAAOC,UAAYA,IAEN,IAAIC,SAASP,EAC1BQ,GAEAV,EAAOK,GAEP,SAAqB,IAAZM,EAAW,EAAXA,QACTC,QAAQC,MAAMF,MAGlB,CAACT,GACD,CACEY,KAAM,MAIH,cAACpB,EAAD,CAAiBqB,MAAOb,EAAMc,SAAUb,EAASN,QAASA,KE9C7DoB,EAAYtB,IAAOuB,IAAV,mIA0BAC,EAhBkB,SAAC,GAAuB,IAArBd,EAAoB,EAApBA,IAClC,EAAkCJ,mBAAS,IAA3C,mBAAOmB,EAAP,KAAkBC,EAAlB,KAOA,OALAC,qBAAU,WACRV,QAAQW,IAAI,cACZF,EAAahB,EAAImB,OAAO,oBACvB,CAACnB,IAGF,cAACY,EAAD,UAEE,wBAAQQ,IAAKL,EAAWM,MAAM,e,SCnB5BC,EAAWC,IAAXD,OAEFV,EAAYtB,IAAOkC,OAAV,yQAqCAV,EAvBkB,SAACW,GAGhC,OACE,eAAC,EAAD,WACE,uBAAOC,QAAQ,GAAf,6BAEA,cAAC,IAAD,CACEC,UAAU,EACVC,aAAa,QACbC,MAAO,CACLC,MAAO,OACPC,SAAU,OACVC,WAAY,OACZC,aAAc,kBAPlB,SAUE,cAACX,EAAD,CAAQZ,MAAM,QAAd,yBChCFE,EAAYtB,IAAOuB,IAAV,8cA2CAC,EAfmB,SAACW,GAGjC,OACE,eAAC,EAAD,WACE,uBAAOC,QAAQ,GAAf,0BAEA,oBAAGQ,KAAK,iBAAiBC,UAAU,WAAnC,UACE,4CACA,sBAAMA,UAAU,QAAhB,iCClCFC,EAAa9C,IAAOuB,IAAV,gQA6BVwB,EAAU,IAAIpC,QAuBLqC,UAlBO,WACpB,MAAsB1C,mBAASyC,GAA/B,mBAAOrC,EAAP,KAAYL,EAAZ,KAEA,OACE,eAACyC,EAAD,WACE,sBAAKD,UAAU,OAAf,UACE,cAACI,EAAD,CAAYvC,IAAKA,IACjB,cAAC,EAAD,CAAYA,IAAKA,EAAKL,OAAQA,OAGhC,sBAAKwC,UAAU,QAAf,UACE,cAACK,EAAD,IACA,cAACC,EAAD,CAASzC,IAAKA","file":"static/js/28.fd4e154b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AllProps } from \"../type\";\nimport { jsPDF as JsPDF } from \"jspdf\";\n// @ts-ignore\nimport CodeMirror from \"react-codemirror\";\nimport { useDebounceEffect } from \"ahooks\";\nimport { initCode } from \"./constant\";\nimport autoTable from \"jspdf-autotable\";\n\nconst CodeMirrorStyle = styled(CodeMirror)`\n  height: 100%;\n  min-height: 100%;\n`;\n\nvar options = {\n  lineNumbers: true,\n};\n\ninterface CodeProps extends AllProps {\n  setPdf: React.Dispatch<React.SetStateAction<any>>;\n}\n\nconst CodeEditor: React.FC<CodeProps> = ({ setPdf }: CodeProps) => {\n  const [code, setCode] = useState(initCode);\n\n  useDebounceEffect(\n    () => {\n      try {\n        const pdf = new JsPDF();\n        // @ts-ignore TODO\n        window.pdf = pdf;\n        // @ts-ignore TODO\n        window.autoTable = autoTable;\n        // eslint-disable-next-line\n        const demo = new Function(code);\n        demo();\n\n        setPdf(pdf);\n        // setTimeout(code, 0);\n      } catch ({ message }) {\n        console.error(message);\n      }\n    },\n    [code],\n    {\n      wait: 1000,\n    }\n  );\n\n  return <CodeMirrorStyle value={code} onChange={setCode} options={options} />;\n};\n\nexport default CodeEditor;\n","export const initCode = `// pdf.text(\"1. 调用pdf.table方法添加的table\", 20, 40);\n      pdf.text(\"1. pdf.table\", 20, 40);\n      pdf.table(\n        10,\n        10,\n        [\n          { name: \"lixingjuan\", age: \"25\" },\n          { name: \"li\", age: \"18\" },\n          { name: \"li\", age: \"22\" },\n        ],\n        [\"name\", \"age\"],\n        {\n          css: {\n            \"font-size\": 0.5,\n          },\n          headerBackgroundColor: \"f6f6f6\",\n          // lineWidth: 0,\n        }\n      );\n\n      pdf.addPage();\n\n      // 3. 获取原液原有table\n      // pdf.text(\"2. 使用autoTable方法, 添加的页面上的table\", 20, 200);\n      pdf.text(\"2. autoTable\", 20, 200);\n      autoTable(pdf, { html: \"table\" });\n\n      // 3. 自定义数据源, 创建table\n      // you need to install 'jspdf-autotable' use \"import autoTable from 'jspdf-autotable';\"\n      // pdf.text(\"3. 使用autoTable方法, 自定义数据源添加的table\", 20, 300);\n      pdf.text(\"3. autoTable datasource\", 20, 300);\n      autoTable(pdf, {\n        head: [[\"Name\", \"Email\", \"Country\"]],\n        body: [\n          [\n            {\n              content: \"Text\",\n              rowSpan: 2,\n              styles: { halign: \"center\", valign: \"middle\" },\n            },\n            \"david@example.com\",\n            \"Sweden\",\n            \"SwedenSwedenSwedenSwedenSweden\",\n          ],\n          [\n            // \"Castille\",\n            \"castille@example.com\",\n            \"Spain\",\n            \"SpainSpainSpainSpainSpain\",\n          ],\n          [\n            \"David\",\n            \"david@example.com\",\n            \"Sweden\",\n            \"SwedenSwedenSwedenSwedenSweden\",\n          ],\n          [\n            \"Castille\",\n            \"castille@example.com\",\n            \"Spain\",\n            \"SpainSpainSpainSpainSpain\",\n          ],\n        ],\n        headStyles: {\n          fillColor: \"red\",\n        },\n      });`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AllProps } from \"../type.d\";\n\nconst DemoStyle = styled.div`\n  width: 100%;\n  height: 100%;\n  iframe {\n    width: 100%;\n    height: 100%;\n    border: 0;\n  }\n`;\n\nconst Demo: React.FC<AllProps> = ({ pdf }: AllProps) => {\n  const [iframeSrc, setIframeSrc] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"pdf change\");\n    setIframeSrc(pdf.output(\"datauristring\"));\n  }, [pdf]);\n\n  return (\n    <DemoStyle>\n      {/* iframeSrc{{ iframeSrc }} */}\n      <iframe src={iframeSrc} title=\"preview\" />\n    </DemoStyle>\n  );\n};\n\nexport default Demo;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Select } from \"antd\";\nimport { AllProps } from \"../type\";\n// @ts-ignore\n\nconst { Option } = Select;\n\nconst DemoStyle = styled.header`\n  height: 90px;\n  min-height: 90px;\n  background-color: rgb(139, 92, 221);\n  color: #fff;\n  display: flex;\n  align-items: center;\n  label {\n    color: rgba(255, 255, 255, 0.5);\n    padding-left: 40px;\n    font-size: 22px;\n  }\n`;\n\nconst Demo: React.FC<AllProps> = (props: AllProps) => {\n  // const { pdf } = props;\n\n  return (\n    <DemoStyle>\n      <label htmlFor=\"\">Pick an example</label>\n\n      <Select\n        bordered={false}\n        defaultValue=\"Table\"\n        style={{\n          color: \"#fff\",\n          fontSize: \"20px\",\n          marginLeft: \"30px\",\n          borderBottom: \"1px solid #fff\",\n        }}\n      >\n        <Option value=\"Table\">Table</Option>\n      </Select>\n    </DemoStyle>\n  );\n};\n\nexport default Demo;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface DemoProps {\n  contentText?: string;\n}\n\nconst DemoStyle = styled.div`\n  height: 90px;\n  min-height: 90px;\n  color: #fff;\n  background-color: #c6c1d3;\n  display: flex;\n  align-items: center;\n  font-size: 22px;\n\n  label {\n    color: #fff;\n    padding-left: 40px;\n  }\n\n  .Download {\n    margin-left: 30px;\n    span.arrow {\n      width: 55px;\n      height: 55px;\n      margin-left: 20px;\n      border-radius: 50%;\n      &:hover {\n        background-color: #aeabbc;\n      }\n    }\n  }\n`;\n\nconst Demo: React.FC<DemoProps> = (props: DemoProps) => {\n  // const { contentText } = props;\n\n  return (\n    <DemoStyle>\n      <label htmlFor=\"\"> PDF preview</label>\n\n      <a href=\"javascript(0);\" className=\"Download\">\n        <span>Download</span>\n        <span className=\"arrow\">⬇️</span>\n      </a>\n    </DemoStyle>\n  );\n};\n\nexport default Demo;\n","import React, { useState } from \"react\";\nimport { jsPDF as JsPDF } from \"jspdf\";\nimport styled from \"styled-components\";\n\nimport CodeEditor from \"./components/CodeEditor\";\nimport Preview from \"./components/Preview\";\nimport CodeHeader from \"./components/CodeHeader\";\nimport PreviewHeader from \"./components/PreviewHeader\";\n// import DemoAddTable from \"./components/DemoAddTable\";\n\nconst IndexStyle = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  height: 80vh;\n  .left,\n  .right {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .card {\n    margin-top: 20px;\n  }\n  .card-wrapper {\n    width: 50%;\n  }\n`;\n\n// const data = [\n//   {\n//     title: \"测试table\",\n//     CompElement: DemoAddTable,\n//   },\n// {\n//   title: \"测试highchart(图片)\",\n//   CompElement: DemoChart,\n// },\n// ];\n\nconst initPdf = new JsPDF();\n\n/**\n * @desc 自定义导出pdf\n */\nconst ExportPdfDemo = () => {\n  const [pdf, setPdf] = useState(initPdf);\n\n  return (\n    <IndexStyle>\n      <div className=\"left\">\n        <CodeHeader pdf={pdf} />\n        <CodeEditor pdf={pdf} setPdf={setPdf} />\n      </div>\n\n      <div className=\"right\">\n        <PreviewHeader />\n        <Preview pdf={pdf} />\n      </div>\n    </IndexStyle>\n  );\n};\n\nexport default ExportPdfDemo;\n"],"sourceRoot":""}