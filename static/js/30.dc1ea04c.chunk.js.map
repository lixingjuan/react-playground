{"version":3,"sources":["pages/TestResizable/TestResizableBox.js","pages/TestResizable/TestResizable.tsx","pages/TestResizable/index.js"],"names":["Example","width","height","minConstraints","maxConstraints","style","border","handle","handleAxis","ref","className","React","Component","useState","setWidth","setHeight","onResize","event","element","size","newWidth","newHeight"],"mappings":"qPAGqBA,E,4JACnB,WACE,OACE,cAAC,eAAD,CACEC,MAAO,IACPC,OAAQ,IACRC,eAAgB,CAAC,IAAK,KACtBC,eAAgB,CAAC,IAAK,KACtBC,MAAO,CAAEC,OAAQ,iBACjBC,OAAQ,SAACC,EAAYC,GAAb,OACN,sBAAMC,UAAS,qBAAgBF,GAA/B,qBAPJ,SAUE,sD,GAb6BG,IAAMC,W,QCC5B,SAASZ,IACtB,MAA0Ba,mBAAS,KAAnC,mBAAOZ,EAAP,KAAca,EAAd,KACA,EAA4BD,mBAAS,KAArC,mBAAOX,EAAP,KAAea,EAAf,KAQA,OACE,cAAC,YAAD,CACEb,OAAQA,EACRD,MAAOA,EAEPe,SAXa,SAACC,EAAD,GAAgD,EAAjCC,QAAkC,IAAzBC,EAAwB,EAAxBA,KACxBC,GADgD,EAAlBb,OACEY,EAAvClB,OAAyBoB,EAAcF,EAAtBjB,OACzBY,EAASM,GACTL,EAAUM,IAURhB,MAAO,CAAEC,OAAQ,iBAEjBC,OAAQ,SAACC,EAAYC,GAAb,OACN,sBAAMC,UAAS,qBAAgBF,GAA/B,qBATJ,SAYE,qBACEE,UAAU,MACVL,MAAO,CACLJ,MAAOA,EAAQ,KACfC,OAAQA,EAAS,MAJrB,SAOE,iDC9BO,SAASF,IACtB,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/30.dc1ea04c.chunk.js","sourcesContent":["import React from \"react\"; // ES6\nimport { ResizableBox } from \"react-resizable\";\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <ResizableBox\n        width={200}\n        height={200}\n        minConstraints={[100, 100]}\n        maxConstraints={[300, 300]}\n        style={{ border: \"red solid 1px\" }}\n        handle={(handleAxis, ref) => (\n          <span className={`foo handle-${handleAxis}`}>handle</span>\n        )}\n      >\n        <span>ResizableBox</span>\n      </ResizableBox>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { Resizable } from \"react-resizable\";\n\n/* Resizable 需要自己根据回调赋值新的宽度 */\nexport default function Example() {\n  const [width, setWidth] = useState(200);\n  const [height, setHeight] = useState(200);\n\n  const onResize = (event: any, { element, size, handle }: any) => {\n    const { width: newWidth, height: newHeight } = size;\n    setWidth(newWidth);\n    setHeight(newHeight);\n  };\n\n  return (\n    <Resizable\n      height={height}\n      width={width}\n      /* @ts-ignore */\n      onResize={onResize}\n      /* @ts-ignore */\n      style={{ border: \"red solid 1px\" }}\n      /* @ts-ignore */\n      handle={(handleAxis, ref) => (\n        <span className={`foo handle-${handleAxis}`}>handle</span>\n      )}\n    >\n      <div\n        className=\"box\"\n        style={{\n          width: width + \"px\",\n          height: height + \"px\",\n        }}\n      >\n        <span>Resizable</span>\n      </div>\n    </Resizable>\n  );\n}\n// class Example extends React.Component {\n//   state = {\n//     width: 200,\n//     height: 200,\n//   };\n\n//   onResize = (event, { element, size, handle }) => {\n//     this.setState({ width: size.width, height: size.height });\n//   };\n\n//   render() {\n//     return (\n//       <Resizable\n//         height={this.state.height}\n//         width={this.state.width}\n//         onResize={this.onResize}\n//         style={{ border: \"red solid 1px\" }}\n//         handle={(handleAxis, ref) => (\n//           <span className={`foo handle-${handleAxis}`}>handle</span>\n//         )}\n//       >\n//         <div\n//           className=\"box\"\n//           style={{\n//             width: this.state.width + \"px\",\n//             height: this.state.height + \"px\",\n//           }}\n//         >\n//           <span>Contents</span>\n//         </div>\n//       </Resizable>\n//     );\n//   }\n// }\n","import React from \"react\"; // ES6\nimport TestResizableBox from \"./TestResizableBox\";\nimport TestResizable from \"./TestResizable\";\n\nexport default function Example() {\n  return (\n    <>\n      <TestResizable />\n      <TestResizableBox />\n    </>\n  );\n}\n"],"sourceRoot":""}