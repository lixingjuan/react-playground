{"version":3,"sources":["pages/TestAHooks/components/usePersistFn/index.tsx","pages/TestAHooks/components/useCreation/index.tsx","pages/TestAHooks/components/useRequest/TestManual.tsx","pages/TestAHooks/components/useRequest/TestPollingInterval.tsx","pages/TestAHooks/components/useRequest/TestParallel.tsx","pages/TestAHooks/components/useRequest/TestSerial.tsx","pages/TestAHooks/components/useDrag/code.ts","pages/TestAHooks/components/useDrag/index.tsx","pages/TestAHooks/components/useToggle/code.tsx","pages/TestAHooks/index.tsx","pages/TestAHooks/components/useCreation/code.tsx","pages/TestAHooks/components/useDebounce/index.tsx","pages/TestAHooks/components/useRequest/index.tsx","pages/TestAHooks/components/useToggle/index.tsx","pages/TestAHooks/components/useCountDown/index.tsx","pages/TestAHooks/components/useCount/index.tsx","pages/TestAHooks/components/useSelections/index.tsx","pages/TestAHooks/components/useSelections/code.tsx"],"names":["ExpensiveTree","React","memo","showCount","renderCountRef","useRef","current","justify","type","onClick","Foo","data","this","Math","random","changeUsername","username","console","log","Promise","resolve","setTimeout","success","Demo","useState","state","setState","useRequest","manual","onSuccess","result","params","message","loading","run","onChange","e","target","value","placeholder","style","width","marginRight","disabled","getUsername","Mock","mock","TestPollingInterval","pollingInterval","pollingWhenHidden","cancel","marginLeft","deleteUser","userId","TestParallel","fetchKey","id","fetches","map","user","marginTop","getUserId","TestSerial","userIdRequest","usernameRequest","ready","useDrag","config","key","getPropsWithKey","undefined","JSON","stringify","draggable","onDragStart","dataTransfer","setData","onDragEnd","BoxDiv","props","border","padding","textAlign","children","useToggle","defaultValue","reverseValue","actions","useMemo","reverseValueOrigin","toggle","s","setLeft","setRight","title","CompElement","count","setCount","showCountPersistFn","usePersistFn","info","showCountCommon","useCallback","c","creationData","factory","deps","obj","initialized","oldDeps","i","length","depsAreSame","useCreation","refData","memoData","setFlag","useEffect","setValue","debouncedValue","useDebounce","wait","leading","dragging","setDragging","getDragProps","useDrop","onText","text","alert","onFiles","files","onUri","uri","onDom","content","isHovering","display","Array","from","String","gridTemplateColumns","gridColumnGap","useCountDown","targetDate","countdown","setTargetDate","formattedRes","days","hours","minutes","seconds","milliseconds","Date","now","round","useCounter","min","max","inc","dec","set","reset","hideOdd","setHideOdd","list","items","defaultSelected","selected","setSelected","selectedSet","Set","singleActions","isSelected","item","has","select","add","unSelect","delete","allActions","selectAll","forEach","o","unSelectAll","noneSelected","every","allSelected","partiallySelected","toggleAll","useSelections","join","borderBottom","checked","indeterminate","v","span","className","borderColor","HeartTwoTone","twoToneColor"],"mappings":"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","file":"static/js/21.4509550d.chunk.js","sourcesContent":["import React, { useState, useCallback, useRef } from \"react\";\nimport { message, Row } from \"antd\";\nimport { usePersistFn } from \"ahooks\";\n\n// some expensive component with React.memo\nconst ExpensiveTree = React.memo<{ [key: string]: any }>(({ showCount }) => {\n  const renderCountRef = useRef(0);\n  renderCountRef.current += 1;\n\n  return (\n    <Row justify=\"space-between\">\n      <span>Render Count: {renderCountRef.current}</span>\n      <button type=\"button\" onClick={showCount}>\n        showParentCount\n      </button>\n    </Row>\n  );\n});\n\nexport default function Demo() {\n  const [count, setCount] = useState(0);\n\n  const showCountPersistFn = usePersistFn(() => {\n    message.info(`Parent count is ${count}`);\n  });\n\n  const showCountCommon = useCallback(() => {\n    message.info(`Parent count is ${count}`);\n  }, [count]);\n\n  return (\n    <>\n      <h2>\n        通过 usePersistFn，函数引用永远不会变化，示例中 showCountPersistFn\n        是不会变化的，showCountCommon 在 count 变化时变化。\n      </h2>\n\n      <button\n        type=\"button\"\n        onClick={() => {\n          setCount((c) => c + 1);\n        }}\n      >\n        Add Count\n      </button>\n      <p>\n        You can click the button to see the number of sub-component renderings\n      </p>\n      <ol>\n        <li style={{ marginTop: 32 }}>\n          <h4>Component with persist function:</h4>\n          <h4>sub-component will only render once</h4>\n          {/* use persist function, ExpensiveTree component will only render once */}\n          <ExpensiveTree showCount={showCountPersistFn} />\n        </li>\n        <li style={{ marginTop: 32 }}>\n          <h4>没有使用 usePersistFn function 的 Component:</h4>\n          <h4>sub-component will re-render on state change</h4>\n          {/* without persist function, ExpensiveTree component will re-render on state change */}\n          <ExpensiveTree showCount={showCountCommon} />\n        </li>\n      </ol>\n    </>\n  );\n}\n","import React, { useState, useRef, useMemo, useEffect } from \"react\";\nimport useCreation from \"./code\";\n\nclass Foo {\n  constructor() {\n    this.data = Math.random();\n  }\n\n  data: number;\n}\n\nexport default function Demo() {\n  const creationData = useCreation(() => new Foo(), []);\n  const refData = useRef(new Foo());\n  const memoData = useMemo(() => new Foo(), []);\n  const [, setFlag] = useState({});\n\n  useEffect(() => {\n    console.log(\"creationData.data改变\");\n  }, [creationData.data]);\n\n  useEffect(() => {\n    console.log(\"refData.current.data改变\");\n  }, [refData.current.data]);\n\n  useEffect(() => {\n    console.log(\"memoData.data改变\");\n  }, [memoData.data]);\n\n  return (\n    <>\n      <p>creationData{creationData.data}</p>\n      <p>refData.data{refData.current.data}</p>\n      <p>memoData.data{memoData.data}</p>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setFlag({});\n        }}\n      >\n        Rerender\n      </button>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { useRequest } from \"ahooks\";\nimport { message, Row } from \"antd\";\n\nfunction changeUsername(username: string): Promise<{ success: boolean }> {\n  console.log(username);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({ success: true });\n    }, 1000);\n  });\n}\n\nexport default function Demo() {\n  const [state, setState] = useState(\"\");\n  const { loading, run } = useRequest(changeUsername, {\n    manual: true,\n    onSuccess: (result, params) => {\n      if (result.success) {\n        setState(\"\");\n        message.success(`The username was changed to \"${params[0]}\" !`);\n      }\n    },\n  });\n\n  return (\n    <div>\n      <h2>手动触发才会触发请求</h2>\n      <Row>\n        <input\n          onChange={(e) => setState(e.target.value)}\n          value={state}\n          placeholder=\"Please enter username\"\n          style={{ width: 240, marginRight: 16 }}\n        />\n        <button disabled={loading} type=\"button\" onClick={() => run(state)}>\n          {loading ? \"loading\" : \"Edit\"}\n        </button>\n      </Row>\n    </div>\n  );\n}\n","import Mock from \"mockjs\";\nimport { useRequest } from \"ahooks\";\n\nfunction getUsername(): Promise<string> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(Mock.mock(\"@name\"));\n    }, 0);\n  });\n}\n\nexport default function TestPollingInterval() {\n  const { data, loading, run, cancel } = useRequest(getUsername, {\n    pollingInterval: 5000,\n    pollingWhenHidden: false,\n  });\n\n  return (\n    <>\n      <h2>每5秒产生一个新名字</h2>\n      <p>Username: {loading ? \"loading\" : data}</p>\n      <button type=\"button\" onClick={run}>\n        start\n      </button>\n      <button type=\"button\" onClick={cancel} style={{ marginLeft: 8 }}>\n        stop\n      </button>\n    </>\n  );\n}\n","import { useRequest } from \"ahooks\";\nimport { message } from \"antd\";\nimport React from \"react\";\n\nexport function deleteUser(userId: string): Promise<{ success: boolean }> {\n  console.log(userId);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({ success: true });\n    }, 1000);\n  });\n}\n\nexport default function TestParallel() {\n  const { run, fetches } = useRequest(deleteUser, {\n    manual: true,\n    fetchKey: (id) => id,\n    onSuccess: (result, params) => {\n      if (result.success) {\n        message.success(`Disabled user ${params[0]}`);\n      }\n    },\n  });\n\n  const users = [\n    { id: \"1\", username: \"A\" },\n    { id: \"2\", username: \"B\" },\n    { id: \"3\", username: \"C\" },\n  ];\n\n  const handleClickItem = (id: string) => {\n    run(id);\n  };\n\n  return (\n    <div>\n      <h2>测试并行</h2>\n      <div>You can click all buttons, each request has its own status.</div>\n      <ul>\n        {users.map((user) => (\n          <li key={user.id} style={{ marginTop: 8 }}>\n            <button\n              type=\"button\"\n              onClick={() => {\n                handleClickItem(user.id);\n              }}\n              disabled={fetches[user.id]?.loading}\n            >\n              {fetches[user.id]?.loading ? \"loading\" : `delete ${user.id}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { useRequest } from \"ahooks\";\nimport Mock from \"mockjs\";\nimport React from \"react\";\n\nfunction getUserId(): Promise<number> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(1011);\n    }, 1000);\n  });\n}\n\nfunction getUsername(id: number): Promise<string> {\n  console.log(\"user id:\", id);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(Mock.mock(\"@name\"));\n    }, 1000);\n  });\n}\n\nexport default function TestSerial() {\n  const userIdRequest = useRequest(getUserId) as any;\n\n  const usernameRequest = useRequest(() => getUsername(userIdRequest.data), {\n    ready: !!userIdRequest.data,\n  });\n\n  return (\n    <div>\n      <h2>串行请求，依赖请求</h2>\n      <p>UserId: {userIdRequest.loading ? \"loading\" : userIdRequest.data}</p>\n      <p>\n        Username: {usernameRequest.loading ? \"loading\" : usernameRequest.data}\n      </p>\n    </div>\n  );\n}\n","type getDragPropsFn = (data: any) => {\n  draggable: \"true\";\n  key?: string;\n  onDragStart: (e: React.DragEvent) => void;\n  onDragEnd: (e: React.DragEvent) => void;\n};\n\ninterface IConfig {\n  onDragStart?: (data: any, e: React.DragEvent) => void;\n  onDragEnd?: (data: any, e: React.DragEvent) => void;\n  /**\n   * 是否在getProps方法返回的对象中包含默认的key\n   *\n   * @default true\n   */\n  getPropsWithKey?: boolean;\n}\n\nconst useDrag = (config?: IConfig): getDragPropsFn => {\n  const getProps = (data: any) => {\n    return {\n      key:\n        config && config.getPropsWithKey === false\n          ? undefined\n          : JSON.stringify(data),\n      draggable: \"true\" as const,\n      onDragStart: (e: React.DragEvent) => {\n        if (config && config.onDragStart) {\n          config.onDragStart(data, e);\n        }\n        e.dataTransfer.setData(\"custom\", JSON.stringify(data));\n      },\n      onDragEnd: (e: React.DragEvent) => {\n        if (config && config.onDragEnd) {\n          config.onDragEnd(data, e);\n        }\n      },\n    };\n  };\n\n  return getProps;\n};\n\nexport default useDrag;\n","import React, { useState } from \"react\";\nimport { useDrop } from \"ahooks\";\nimport useDrag from \"./code\";\n\nfunction BoxDiv(props: any) {\n  return (\n    <div\n      {...props}\n      style={{\n        border: \"1px solid #e8e8e8\",\n        padding: 16,\n        width: 80,\n        textAlign: \"center\",\n        marginRight: 16,\n      }}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default function UseDragPage() {\n  const [dragging, setDragging] = useState<string | null>(null);\n\n  const getDragProps = useDrag({\n    onDragStart: (data) => {\n      debugger;\n      setDragging(data);\n    },\n    onDragEnd: () => {\n      setDragging(null);\n    },\n  });\n\n  const [props, { isHovering }] = useDrop({\n    onText: (text, e) => {\n      console.log(e);\n      alert(`'text: ${text}' dropped`);\n    },\n    onFiles: (files, e) => {\n      console.log(e, files);\n      alert(`${files.length} file dropped`);\n    },\n    onUri: (uri, e) => {\n      console.log(e);\n      alert(`uri: ${uri} dropped`);\n    },\n    onDom: (content: string, e) => {\n      alert(`custom: ${content} dropped`);\n    },\n  });\n\n  return (\n    <div>\n      <div\n        style={{\n          border: \"1px dashed #e8e8e8\",\n          padding: 16,\n          textAlign: \"center\",\n        }}\n        {...props}\n        draggable={true}\n        onDragStart={(e) => {\n          console.log(e);\n        }}\n      >\n        {isHovering ? \"release here\" : \"drop here\"}\n      </div>\n\n      <div style={{ display: \"flex\", marginTop: 8 }}>\n        {Array.from(Array(5)).map((e, i) => (\n          <BoxDiv {...getDragProps(`box${i}`)}>box{i}</BoxDiv>\n        ))}\n      </div>\n\n      <div style={{ marginTop: 8 }}>\n        {dragging ? <>dragging {dragging}</> : \"not dragging\"}\n      </div>\n    </div>\n  );\n}\n","import { useState, useMemo } from \"react\";\n\ntype IState = string | number | boolean | undefined;\n\nexport interface Actions<T = IState> {\n  setLeft: () => void;\n  setRight: () => void;\n  toggle: (value?: T) => void;\n}\n\nfunction useToggle<T = boolean | undefined>(): [boolean, Actions<T>];\n\nfunction useToggle<T = IState>(defaultValue: T): [T, Actions<T>];\n\nfunction useToggle<T = IState, U = IState>(\n  defaultValue: T,\n  reverseValue: U\n): [T | U, Actions<T | U>];\n\nfunction useToggle<D extends IState = IState, R extends IState = IState>(\n  defaultValue: D = false as D,\n  reverseValue?: R\n) {\n  const [state, setState] = useState<D | R>(defaultValue);\n\n  const actions = useMemo(() => {\n    const reverseValueOrigin = (\n      reverseValue === undefined ? !defaultValue : reverseValue\n    ) as D | R;\n\n    // 切换返回值\n    const toggle = (value?: D | R) => {\n      // 强制返回状态值，适用于点击操作\n      if (value !== undefined) {\n        setState(value);\n        return;\n      }\n      setState((s) => (s === defaultValue ? reverseValueOrigin : defaultValue));\n    };\n    // 设置默认值\n    const setLeft = () => setState(defaultValue);\n    // 设置取反值\n    const setRight = () => setState(reverseValueOrigin);\n    return {\n      toggle,\n      setLeft,\n      setRight,\n    };\n  }, [defaultValue, reverseValue]);\n\n  return [state, actions];\n}\n\nexport default useToggle;\n","import { Card } from \"antd\";\nimport usePersistFn from \"./components/usePersistFn\";\nimport useCreation from \"./components/useCreation\";\nimport useDebounce from \"./components/useDebounce\";\nimport useRequest from \"./components/useRequest\";\nimport useDrag from \"./components/useDrag\";\nimport useToggle from \"./components/useToggle\";\nimport useSelections from \"./components/useSelections\";\nimport useCount from \"./components/useCount\";\nimport useCountDown from \"./components/useCountDown\";\n// import DemoTwo from \"./components/useToggle\";\nimport { HeartTwoTone } from \"@ant-design/icons\";\n\nconst data = [\n  {\n    title: \"usePersistFn\",\n    CompElement: usePersistFn,\n  },\n  {\n    title: \"useCreation\",\n    CompElement: useCreation,\n  },\n  {\n    title: \"useDebounce\",\n    CompElement: useDebounce,\n  },\n  {\n    title: \"useRequest\",\n    CompElement: useRequest,\n  },\n  {\n    title: \"useDrag\",\n    CompElement: useDrag,\n  },\n  {\n    title: \"useToggle\",\n    CompElement: useToggle,\n  },\n  {\n    title: \"useCountDown\",\n    CompElement: useCountDown,\n  },\n  {\n    title: \"useCount\",\n    CompElement: useCount,\n  },\n  {\n    title: \"useSelections\",\n    CompElement: useSelections,\n  },\n];\n\nexport default function Demo() {\n  return (\n    <div>\n      <h2>ahooks源码学习</h2>\n      <h3>源码真的过于精致了！</h3>\n      <hr />\n      <div className=\"card-wrapper\">\n        {data.map(({ title, CompElement }) => (\n          <Card\n            style={{\n              borderColor: \"#7fcbfa\",\n            }}\n            title={\n              <>\n                <HeartTwoTone twoToneColor=\"#eb2f96\" />\n                <span>{title}</span>\n              </>\n            }\n          >\n            <CompElement />\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { useRef } from \"react\";\n\nexport default function useCreation<T>(factory: () => T, deps: any[]) {\n  const { current } = useRef({\n    deps,\n    obj: undefined as undefined | T,\n    initialized: false,\n  });\n\n  /* 第一次初始化||当deps改变 ，则为current重新赋值 */\n  if (current.initialized === false || !depsAreSame(current.deps, deps)) {\n    current.deps = deps;\n    current.obj = factory();\n    current.initialized = true;\n  }\n\n  return current.obj as T;\n}\n\nfunction depsAreSame(oldDeps: any[], deps: any[]): boolean {\n  if (oldDeps === deps) return true;\n  for (let i = 0; i < oldDeps.length; i++) {\n    if (oldDeps[i] !== deps[i]) return false;\n  }\n  return true;\n}\n","import React, { useState } from \"react\";\nimport { useDebounce } from \"ahooks\";\n\nexport default function Demo() {\n  const [value, setValue] = useState<string>();\n  const debouncedValue = useDebounce(value, { wait: 1000, leading: true });\n\n  return (\n    <div>\n      <input\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        placeholder=\"Typed value\"\n        style={{ width: 280 }}\n      />\n      <p style={{ marginTop: 16 }}>DebouncedValue: {debouncedValue}</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport TestManual from \"./TestManual\";\nimport TestPollingInterval from \"./TestPollingInterval\";\nimport TestParallel from \"./TestParallel\";\nimport TestSerial from \"./TestSerial\";\nimport \"./style.css\";\n\nexport default function Index() {\n  return (\n    <div>\n      <ol>\n        <li>\n          <TestManual />\n        </li>\n        <li>\n          <TestPollingInterval />\n        </li>\n        <li>\n          <TestParallel />\n        </li>\n        <li>\n          <TestSerial />\n        </li>\n      </ol>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"antd\";\n// import { useToggle } from \"ahooks\";\nimport useToggle from \"./code\";\n\nexport default function TestAHooksToggle() {\n  const [state, { toggle, setLeft, setRight }] = useToggle(\"left\", \"right\");\n\n  return (\n    <div>\n      <div>Current Vlue: {String(state)}</div>\n\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"1fr 1fr 1fr\",\n          gridColumnGap: \"30px\",\n        }}\n      >\n        <Button type=\"dashed\" onClick={() => toggle()}>\n          Toggle\n        </Button>\n        <Button type=\"dashed\" onClick={() => setLeft()}>\n          setLeft\n        </Button>\n        <Button type=\"dashed\" onClick={() => setRight()}>\n          setRight\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useCountDown } from \"ahooks\";\n\nexport default function AAA() {\n  const [countdown, setTargetDate, formattedRes] = useCountDown({\n    targetDate: \"2021-12-31 24:00:00\",\n  });\n\n  const { days, hours, minutes, seconds, milliseconds } = formattedRes;\n\n  return (\n    <div>\n      <>\n        <h2>倒计时(从组件加载到未来)1000秒的毫秒数</h2>\n        <div>countdown: {countdown}</div>\n      </>\n\n      <>\n        <h2>格式化的时间</h2>\n        <ul>\n          <li>days: {days}</li>\n          <li>hours: {hours}</li>\n          <li>minutes: {minutes}</li>\n          <li>seconds: {seconds}</li>\n          <li>milliseconds: {milliseconds}</li>\n        </ul>\n      </>\n\n      <>\n        <h2>手动控制计时器的状态, 设置倒计时5秒</h2>\n        <button\n          onClick={() => {\n            setTargetDate(Date.now() + 5000);\n          }}\n          disabled={countdown !== 0}\n        >\n          {countdown === 0\n            ? \"Start Interval\"\n            : `Reset After ${Math.round(countdown / 1000)}s`}\n        </button>\n        <button\n          onClick={() => {\n            setTargetDate(undefined);\n          }}\n          style={{ marginLeft: 8 }}\n        >\n          stop\n        </button>\n      </>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useCounter } from \"ahooks\";\n\nexport default function useCount() {\n  const [current, { inc, dec, set, reset }] = useCounter(100, {\n    min: 1,\n    max: 10,\n  });\n\n  return (\n    <div>\n      <p>{current} [max: 10; min: 1;]</p>\n      <div>\n        <button\n          type=\"button\"\n          onClick={() => {\n            inc();\n          }}\n          style={{ marginRight: 8 }}\n        >\n          inc()\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            dec();\n          }}\n          style={{ marginRight: 8 }}\n        >\n          dec()\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            set(3);\n          }}\n          style={{ marginRight: 8 }}\n        >\n          set(3)\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            reset();\n          }}\n          style={{ marginRight: 8 }}\n        >\n          reset()\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { Checkbox, Col, Row } from \"antd\";\nimport React, { useMemo, useState } from \"react\";\n// import { useSelections } from \"ahooks\";\nimport useSelections from \"./code\";\n\nexport default function TestUseSelections() {\n  const [hideOdd, setHideOdd] = useState(false);\n\n  const list = useMemo(() => {\n    if (hideOdd) {\n      return [2, 4, 6, 8];\n    }\n    return [1, 2, 3, 4, 5, 6, 7, 8];\n  }, [hideOdd]);\n\n  const {\n    selected,\n    allSelected,\n    isSelected,\n    toggle,\n    toggleAll,\n    partiallySelected,\n  } = useSelections(list, [1]);\n\n  return (\n    <div>\n      <div>初始化被选中的元素 selected : {selected.join(\",\")}</div>\n      <div style={{ borderBottom: \"1px solid #E9E9E9\", padding: \"10px 0\" }}>\n        <Checkbox\n          checked={allSelected}\n          onClick={toggleAll}\n          indeterminate={partiallySelected}\n        >\n          Check all\n        </Checkbox>\n        <Checkbox checked={hideOdd} onClick={() => setHideOdd((v) => !v)}>\n          Hide Odd\n        </Checkbox>\n      </div>\n\n      <Row style={{ padding: \"10px 0\" }}>\n        {list.map((o) => (\n          <Col span={12} key={o}>\n            <Checkbox checked={isSelected(o)} onClick={() => toggle(o)}>\n              {o}\n            </Checkbox>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n}\n","/* eslint-disable no-shadow */\nimport { useState, useMemo } from \"react\";\n\nexport default function useSelections<T>(\n  items: T[],\n  defaultSelected: T[] = []\n) {\n  /* 初始化时候被选中的元素 */\n  const [selected, setSelected] = useState<T[]>(defaultSelected);\n\n  /* 被选中的元素进行去重 */\n  const selectedSet = useMemo(() => new Set<T>(selected), [selected]);\n\n  /* 单选操作 */\n  const singleActions = useMemo(() => {\n    /* 函数，用于判断当前item的选中状态 */\n    const isSelected = (item: T) => selectedSet.has(item);\n\n    const select = (item: T) => {\n      selectedSet.add(item);\n      return setSelected(Array.from(selectedSet));\n    };\n\n    const unSelect = (item: T) => {\n      selectedSet.delete(item);\n      return setSelected(Array.from(selectedSet));\n    };\n\n    const toggle = (item: T) => {\n      if (isSelected(item)) {\n        unSelect(item);\n      } else {\n        select(item);\n      }\n    };\n\n    return { isSelected, select, unSelect, toggle };\n  }, [selectedSet]);\n\n  /* 全选操作 */\n  const allActions = useMemo(() => {\n    /* 选中全部=> 遍历list, 将其加入set */\n    const selectAll = () => {\n      items.forEach((o) => {\n        selectedSet.add(o);\n      });\n      setSelected(Array.from(selectedSet));\n    };\n\n    /* 选中全部=> 遍历list, 将其从set移除 */\n    const unSelectAll = () => {\n      items.forEach((o) => {\n        selectedSet.delete(o);\n      });\n      setSelected(Array.from(selectedSet));\n    };\n\n    /* 没有选中的元素，当前list的所有元素都不在 set 中 */\n    const noneSelected = items.every((o) => !selectedSet.has(o));\n\n    /* 所有都已经选中，当前list的所有元素都在 set 中 */\n    const allSelected = items.every((o) => selectedSet.has(o)) && !noneSelected;\n\n    /* 部分选中 */\n    const partiallySelected = !noneSelected && !allSelected;\n\n    /* 切换选中状态 */\n    const toggleAll = () => (allSelected ? unSelectAll() : selectAll());\n\n    return {\n      selectAll,\n      unSelectAll,\n      noneSelected,\n      allSelected,\n      partiallySelected,\n      toggleAll,\n    };\n  }, [selectedSet, items]);\n\n  return {\n    selected,\n    setSelected,\n    ...singleActions,\n    ...allActions,\n  } as const;\n}\n"],"sourceRoot":""}