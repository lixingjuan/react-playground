{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","../node_modules/@ant-design/icons/es/icons/CloseOutlined.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/TestTabs/components/TestRender.tsx","pages/TestTabs/index.js"],"names":["CloseOutlined","props","ref","React","AntdIcon","_objectSpread","icon","CloseOutlinedSvg","displayName","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","TabPane","Tabs","OnceMap","initTabArr","name","age","TestRender","useState","tabArr","setTabArr","activeKey","setactiveKey","callback","useCallback","key","handleAdd","preState","Math","random","onClick","defaultActiveKey","onChange","map","it","tab","console","log","length","index","TestTabsPage","title","style","width"],"mappings":"+IAEeA,EADK,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,+TAAmU,KAAQ,QAAS,MAAS,Y,QCMpfA,EAAgB,SAAuBC,EAAOC,GAChD,OAAoBC,gBAAoBC,IAAUC,YAAcA,YAAc,GAAIJ,GAAQ,GAAI,CAC5FC,IAAKA,EACLI,KAAMC,MAIVP,EAAcQ,YAAc,gBACAL,iBAAiBH,I,2FCX9B,SAASS,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,uGIFtFC,EAAYC,IAAZD,QAEFE,EAAU,GAeVC,EANsB,CAC1B,CAAEC,KAAM,KAAMC,IAAK,KACnB,CAAED,KAAM,OAAQC,IAAK,KACrB,CAAED,KAAM,OAAQC,IAAK,MAkDRC,EA7CI,WACjB,MACEC,mBAA0CJ,GAD5C,mBAAOK,EAAP,KAAeC,EAAf,KAGA,EAAkCF,mBAASC,EAAO,GAAGJ,MAArD,mBAAOM,EAAP,KAAkBC,EAAlB,KAEMC,EAAWC,uBAAY,SAACC,GAE5BH,EAAaG,KACZ,IAEGC,EAAYF,uBAAY,WAC5BJ,GAAU,SAACO,GAAD,4BACLA,GADK,CAER,CACEZ,KAAK,GAAD,OAAKa,KAAKC,UACdb,IAAKY,KAAKC,iBAGb,IAEH,OACE,gCACE,uOAKA,cAAC,IAAD,CAAQC,QAASJ,EAAjB,qDAEA,mHACA,+IACA,cAAC,IAAD,CAAMK,iBAAiB,IAAIC,SAAUT,EAAUF,UAAWA,EAA1D,SACGF,EAAOc,KAAI,SAACC,GAAD,OACV,cAACvB,EAAD,CAASwB,IAAKD,EAAGnB,KAAjB,SACE,gCACGmB,EAAGnB,KADN,6BAnDQA,EAoDoBmB,EAAGnB,KApDLF,EAAQE,IAASF,EAAQE,IAAS,GAAK,OAkDvCmB,EAAGnB,MAlDtB,IAACA,WCHZJ,EAAYC,IAAZD,QAER,SAASY,EAASE,GAChBW,QAAQC,IAAI,CAAEZ,QAGhB,IAAMzB,EAAMC,MAAMO,KAAK,CAAE8B,OAAQ,KAAML,KAAI,SAACC,EAAIK,GAAL,MAAgB,CACzDJ,IAAI,MAAD,OAAQI,OAqBEC,UAlBM,WACnB,OACE,gCACE,cAAC,IAAD,CAAMT,iBAAiB,IAAIC,SAAUT,EAArC,SACGvB,EAAIiC,KAAI,SAACC,GAAD,OACP,eAAC,EAAD,CAASC,IAAKD,EAAGC,IAAjB,UACGD,EAAGC,IADN,aAA2BD,EAAGC,UAMlC,cAAC,IAAD,CAAMM,MAAM,oCAAWC,MAAO,CAAEC,MAAO,SAAvC,SACE,cAAC,EAAD","file":"static/js/20.fcd80a53.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\n\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useCallback } from \"react\";\nimport { Button, Tabs } from \"antd\";\n\nconst { TabPane } = Tabs;\n\nconst OnceMap = {} as any;\nconst renderOnce = (name: string) => (OnceMap[name] = (OnceMap[name] || 0) + 1);\n\n// const Content = ({ name }: { name: string }) => (\n//   <TabPane tab={name} key={name}>\n//     <div>渲染次数{renderOnce(\"name\")}</div>\n//   </TabPane>\n// );\n\nconst getInitTabArr = () => [\n  { name: \"li\", age: 888 },\n  { name: \"xing\", age: 888 },\n  { name: \"juan\", age: 888 },\n];\n\nconst initTabArr = getInitTabArr();\n\nconst TestRender = () => {\n  const [tabArr, setTabArr] =\n    useState<{ name: string; age: number }[]>(initTabArr);\n\n  const [activeKey, setactiveKey] = useState(tabArr[0].name);\n\n  const callback = useCallback((key: any) => {\n    // console.log({ key });\n    setactiveKey(key);\n  }, []);\n\n  const handleAdd = useCallback(() => {\n    setTabArr((preState) => [\n      ...preState,\n      {\n        name: `${Math.random()}`,\n        age: Math.random(),\n      },\n    ]);\n  }, []);\n\n  return (\n    <div>\n      <h2>\n        测试如果通过往tab的数组添加内容的方式新增tab,\n        是否会引起所有的tab重新渲染\n      </h2>\n\n      <Button onClick={handleAdd}>添加一个随机tab</Button>\n\n      <div>？？？？ 为什么初次渲染2次？</div>\n      <div>？？？？ 为什么切换tab, 其他也会渲染？？</div>\n      <Tabs defaultActiveKey=\"1\" onChange={callback} activeKey={activeKey}>\n        {tabArr.map((it) => (\n          <TabPane tab={it.name} key={it.name}>\n            <div>\n              {it.name}=渲染次数{renderOnce(it.name)}\n            </div>\n          </TabPane>\n        ))}\n      </Tabs>\n    </div>\n  );\n};\n\nexport default TestRender;\n","import { Tabs, Card } from \"antd\";\nimport TestRender from \"./components/TestRender\";\n\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log({ key });\n}\n\nconst arr = Array.from({ length: 20 }).map((it, index) => ({\n  tab: `tab${index}`,\n}));\n\nconst TestTabsPage = () => {\n  return (\n    <div>\n      <Tabs defaultActiveKey=\"1\" onChange={callback}>\n        {arr.map((it) => (\n          <TabPane tab={it.tab} key={it.tab}>\n            {it.tab} content\n          </TabPane>\n        ))}\n      </Tabs>\n\n      <Card title=\"测试tab的渲染\" style={{ width: \"100vw\" }}>\n        <TestRender />\n      </Card>\n    </div>\n  );\n};\n\nexport default TestTabsPage;\n"],"sourceRoot":""}